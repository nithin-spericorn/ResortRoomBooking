{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./UserRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport CartReducer from \"./CartRedux\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n}; //const rootReducer = combineReducers({ user: userReducer,cart:CartReducer});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["/home/nithin/Downloads/Resort/Client/src/redux/Store.js"],"names":["configureStore","combineReducers","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","CartReducer","persistConfig","key","version","rootReducer","state","action","appReducer","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBJ,EAAAA;AAHoB,CAAtB,C,CAMA;;AACA,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAOC,UAAU,CAACF,KAAD,EAAQC,MAAR,CAAjB;AACD,CAFD;;AAIA,MAAME,gBAAgB,GAAGhB,cAAc,CAACS,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMK,KAAK,GAAGrB,cAAc,CAAC;AAClCsB,EAAAA,OAAO,EAAEF,gBADyB;AAElCG,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACrB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAHY,CAAD,CAA5B;AAUP,OAAO,IAAIiB,SAAS,GAAGxB,YAAY,CAACkB,KAAD,CAA5B","sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./UserRedux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport CartReducer from \"./CartRedux\";\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\n//const rootReducer = combineReducers({ user: userReducer,cart:CartReducer});\nconst rootReducer = (state, action) => {\n  return appReducer(state, action)\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}