{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Downloads/Resort/Client/src/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { setUseProxies } from '@reduxjs/toolkit/node_modules/immer';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Banner from '../Components/Banner';\nimport Hero from '../Components/Hero';\nimport { publicRequest } from '../requestMethods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  /* const [message,setMessage]=useState()\n   const [name,setName]=useState()\n   const [email,setEmail]=useState()\n   const [password,setPassword]=useState()\n   const dispatch=useDispatch()\n   const [user,setUser]=useState(null)\n   const [formIsValid,setFormIsValid]=useState(false)\n  \n  \n   const handleClick=(event)=>{\n    event.preventDefault();\n    if(email.include('@')){\n      setFormIsValid(true)\n    }\n     setUser({name,email,password})\n     \n   }\n   useEffect(()=>{\n       const Res= async ()=>{\n         try{\n           const res = await publicRequest.post(\"user/sign-up\",{name,email,password})\n           console.log(res.data.message)\n           setMessage(res.data.message)\n           //console.log(res.data)\n   \n         }catch(err){\n           \n         }\n       }\n       Res()\n     },[formIsValid])*/\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"checking form validity\");\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log(\"Clean Up\");\n      clearTimeout(identifier);\n    };\n  }, [enteredEmail, enteredPassword]);\n\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setUser({\n      enteredName,\n      enteredEmail,\n      enteredPassword\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Hero, {\n    children: /*#__PURE__*/_jsxDEV(Banner, {\n      title: \"Register\",\n      subtitle: \"Create Your Account\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredName,\n          onChange: nameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitHandler,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"2qdnwhS9eknRPD0xaEQjexb0TfM=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/nithin/Downloads/Resort/Client/src/Pages/Register.js"],"names":["setUseProxies","React","useEffect","useState","useDispatch","Banner","Hero","publicRequest","Register","enteredName","setEnteredName","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","identifier","setTimeout","console","log","includes","trim","length","clearTimeout","nameChangeHandler","event","target","value","emailChangeHandler","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","setUser","message"],"mappings":"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","sourcesContent":["import { setUseProxies } from '@reduxjs/toolkit/node_modules/immer'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Banner from '../Components/Banner'\nimport Hero from '../Components/Hero'\nimport { publicRequest } from '../requestMethods'\n\nconst Register = () => {\n   /* const [message,setMessage]=useState()\n    const [name,setName]=useState()\n    const [email,setEmail]=useState()\n    const [password,setPassword]=useState()\n    const dispatch=useDispatch()\n    const [user,setUser]=useState(null)\n    const [formIsValid,setFormIsValid]=useState(false)\n   \n   \n    const handleClick=(event)=>{\n     event.preventDefault();\n     if(email.include('@')){\n       setFormIsValid(true)\n     }\n\n     setUser({name,email,password})\n      \n    }\n    useEffect(()=>{\n        const Res= async ()=>{\n          try{\n            const res = await publicRequest.post(\"user/sign-up\",{name,email,password})\n            console.log(res.data.message)\n            setMessage(res.data.message)\n            //console.log(res.data)\n    \n          }catch(err){\n            \n          }\n        }\n        Res()\n      },[formIsValid])*/\n  const [enteredName,setEnteredName]=useState('')\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n\n  useEffect(()=>{\n   const identifier= setTimeout(()=>{\n      console.log(\"checking form validity\")\n    setFormIsValid(\n      enteredEmail.includes('@') && enteredPassword.trim().length > 6\n    );\n    },500)\n    return ()=>{\n      console.log(\"Clean Up\")\n    clearTimeout(identifier)\n    }\n    \n  },[enteredEmail,enteredPassword])\n\n  const nameChangeHandler=(event)=>{\n    setEnteredName(event.target.value)\n  }\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setUser({enteredName,enteredEmail,enteredPassword})\n  \n  };\n\n    return (\n        <Hero>\n            <Banner\n          title=\"Register\"\n          subtitle=\"Create Your Account\"\n        >\n            <form>\n            <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredName}\n            onChange={nameChangeHandler}\n          />\n            <label>Email</label>\n            <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n            <label>Password</label>\n            <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n            <button onClick={submitHandler}>SUBMIT</button>\n            </form>\n            {message &&  <section>{message}</section>}\n            \n            \n         \n        </Banner>\n        \n        </Hero>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}