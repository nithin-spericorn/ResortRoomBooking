{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Downloads/Resort/Client/src/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { setUseProxies } from '@reduxjs/toolkit/node_modules/immer';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Banner from '../Components/Banner';\nimport Hero from '../Components/Hero';\nimport { publicRequest } from '../requestMethods';\nimport Button from '../UI/Button/Buttton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [message, setMessage] = useState();\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const dispatch = useDispatch();\n  const [user, setUser] = useState(null);\n  const [emailIsValid, setEmailIsValid] = useState(false);\n  const [passwordIsValid, setPasswordIsValid] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  /* useEffect(()=>{\n     const identifier= setTimeout(()=>{\n        console.log(\"checking form validity\")\n      setFormIsValid(\n       email.includes('@') && password.trim().length > 6\n      );\n      },500)\n      return ()=>{\n        console.log(\"Clean Up\")\n        console.log(formIsValid)\n      clearTimeout(identifier)\n      }\n      \n    },[formIsValid])*/\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (passwordIsValid && emailIsValid) {\n      setFormIsValid(true);\n    }\n\n    if (formIsValid === true) {\n      setUser({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  useEffect(() => {\n    const Res = async () => {\n      try {\n        const res = await publicRequest.post(\"user/sign-up\", {\n          name,\n          email,\n          password\n        });\n        console.log(res.data.message);\n        setMessage(res.data.message); //console.log(res.data)\n      } catch (err) {}\n    };\n\n    Res();\n  }, [user]);\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(email.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(password.trim().length > 2);\n    console.log(passwordIsValid);\n  };\n\n  const passwordSet = event => {\n    setPassword(event.target.value);\n    validatePasswordHandler();\n  };\n\n  const emailSet = event => {\n    setEmail(event.target.value);\n    validateEmailHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Hero, {\n    children: /*#__PURE__*/_jsxDEV(Banner, {\n      title: \"Register\",\n      subtitle: \"Create Your Account\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: emailSet,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: passwordSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleClick,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"qVi847F1Mls8bOf7GUEZrhNmCro=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/nithin/Downloads/Resort/Client/src/Pages/Register.js"],"names":["setUseProxies","React","useEffect","useState","useDispatch","Banner","Hero","publicRequest","Button","Register","message","setMessage","name","setName","email","setEmail","password","setPassword","dispatch","user","setUser","emailIsValid","setEmailIsValid","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","handleClick","event","preventDefault","Res","res","post","console","log","data","err","validateEmailHandler","includes","validatePasswordHandler","trim","length","passwordSet","target","value","emailSet","e"],"mappings":"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","sourcesContent":["import { setUseProxies } from '@reduxjs/toolkit/node_modules/immer'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Banner from '../Components/Banner'\nimport Hero from '../Components/Hero'\nimport { publicRequest } from '../requestMethods'\nimport Button from '../UI/Button/Buttton'\n\nconst Register = () => {\n    const [message,setMessage]=useState()\n    const [name,setName]=useState()\n    const [email,setEmail]=useState()\n    const [password,setPassword]=useState()\n    const dispatch=useDispatch()\n    const [user,setUser]=useState(null)\n    const [emailIsValid, setEmailIsValid] = useState(false);\n    const [passwordIsValid, setPasswordIsValid] = useState(false);\n    const [formIsValid, setFormIsValid] = useState(false);\n\n   /* useEffect(()=>{\n      const identifier= setTimeout(()=>{\n         console.log(\"checking form validity\")\n       setFormIsValid(\n        email.includes('@') && password.trim().length > 6\n       );\n       },500)\n       return ()=>{\n         console.log(\"Clean Up\")\n         console.log(formIsValid)\n       clearTimeout(identifier)\n       }\n       \n     },[formIsValid])*/\n\n    const handleClick=(event)=>{\n     event.preventDefault();\n     if(passwordIsValid && emailIsValid){\n       setFormIsValid(true)\n     }\n     if(formIsValid===true){\n      setUser({name,email,password})\n     }\n      \n    }\n    useEffect(()=>{\n        const Res= async ()=>{\n          try{\n            const res = await publicRequest.post(\"user/sign-up\",{name,email,password})\n            console.log(res.data.message)\n            setMessage(res.data.message)\n            //console.log(res.data)\n    \n          }catch(err){\n            \n          }\n        }\n        Res()\n      },[user])\n    \n      const validateEmailHandler=()=>{\n        setEmailIsValid(email.includes('@'));\n      }\n      const validatePasswordHandler=()=>{\n        setPasswordIsValid(password.trim().length > 2);\n        console.log(passwordIsValid)\n      }\n      const passwordSet=(event)=>{\n        setPassword(event.target.value)\n        validatePasswordHandler()\n       \n      }\n      const emailSet=(event)=>{\n        setEmail(event.target.value)\n        validateEmailHandler()\n       \n      }\n\n    return (\n        <Hero>\n            <Banner\n          title=\"Register\"\n          subtitle=\"Create Your Account\"\n        >\n            <form>\n            <label>Name</label>\n            <input type=\"text\" onChange={(e)=>setName(e.target.value)} />\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" value={email} onChange={emailSet} onBlur={validateEmailHandler} />\n\n            <label htmlFor=\"password\">Password</label>\n           \n            <input type=\"password\" id=\"password\" value={password} onChange={passwordSet} />\n\n            <button type=\"submit\" onClick={handleClick} >SUBMIT</button>\n            </form>\n            {message &&  <section>{message}</section>}\n            \n            \n         \n        </Banner>\n        \n        </Hero>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}